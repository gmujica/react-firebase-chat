{"version":3,"sources":["components/SimpleList.js","components/InfoModal.js","components/layout/Header.js","components/User.js","components/Alert.js","components/Login.js","components/Signup.js","components/chat/NewMessage.js","components/chat/index.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","width","backgroundColor","palette","background","paper","SimpleList","classes","className","List","component","aria-label","ListItem","button","ListItemIcon","ListItemText","primary","Divider","styles","margin","closeButton","position","right","spacing","top","color","grey","icon","marginRight","DialogTitle","withStyles","props","children","onClose","other","disableTypography","Typography","variant","IconButton","onClick","DialogContent","padding","MuiDialogContent","DialogActions","MuiDialogActions","InfoModal","React","useState","open","setOpen","handleClose","style","Dialog","aria-labelledby","id","dividers","gutterBottom","edge","href","target","Button","autoFocus","flexGrow","menuButton","title","Header","AppBar","Toolbar","withRouter","history","user","onLogout","anchorEl","setAnchorEl","Boolean","aria-controls","aria-haspopup","event","currentTarget","Icon","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","MenuItem","disabled","name","firebase","auth","signOut","then","push","success","green","error","dark","info","main","warning","amber","fontSize","iconVariant","opacity","message","display","alignItems","Alert","type","autoclose","reason","Snackbar","autoHideDuration","SnackbarContent","clsx","aria-describedby","action","key","MyLink","forwardRef","ref","innerRef","body","common","white","marginTop","flexDirection","paperUser","avatar","secondary","form","submit","email","password","setUser","errorMessage","setErrorMessage","handleChange","e","value","Container","maxWidth","CssBaseline","onSubmit","preventDefault","signInWithEmailAndPassword","response","catch","console","log","TextField","required","fullWidth","label","autoComplete","defaultValue","onChange","Grid","container","item","Link","to","Paper","alertMessage","setAlertMessage","createUserWithEmailAndPassword","database","uid","set","xs","sm","justify","paddingTop","paddingBottom","border","borderRadius","box","height","paddingLeft","NewMessage","setMessage","square","currentUser","date","ServerValue","TIMESTAMP","res","alert","direction","Box","endIcon","length","text","list","marginBottom","maxHeight","overflow","messages","setMessages","chatDomRef","useRef","useEffect","on","snapshot","messageItem","val","once","userResp","sort","a","b","current","scrollTop","scrollHeight","includes","map","ListItemAvatar","Avatar","alt","src","Routes","exact","path","Chat","Login","Signup","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","App","onAuthStateChanged","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.92025373.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Divider from '@material-ui/core/Divider';\nimport CodeIcon from '@material-ui/icons/Code';\nimport StyleIcon from '@material-ui/icons/Style';\nimport StorageIcon from '@material-ui/icons/Storage';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    backgroundColor: theme.palette.background.paper,\n  },\n}));\n\nconst SimpleList = () => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <List component=\"nav\" aria-label=\"main mailbox folders\">\n        <ListItem button>\n          <ListItemIcon>\n            <CodeIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"ReactJS\" />\n        </ListItem>\n        <Divider />\n        <ListItem button>\n          <ListItemIcon>\n            <CodeIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Redux\" />\n        </ListItem>\n        <Divider />\n        <ListItem button>\n          <ListItemIcon>\n            <StyleIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Material-UI\" />\n        </ListItem>\n        <Divider />\n        <ListItem button>\n          <ListItemIcon>\n            <StyleIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Styled Components\" />\n        </ListItem>\n        <Divider />\n        <ListItem button>\n          <ListItemIcon>\n            <StorageIcon />\n          </ListItemIcon>\n          <ListItemText primary=\"Local Storage\" />\n        </ListItem>\n      </List>\n    </div>\n  );\n};\n\nexport default SimpleList;","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport InfoIcon from '@material-ui/icons/Info';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\n\nimport SimpleList from './SimpleList';\n\n\nconst styles = theme => ({\n  root: {\n    margin: 0,\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing(1),\n    top: theme.spacing(1),\n    color: theme.palette.grey[500],\n  },\n  icon: {\n    marginRight: theme.spacing(2),\n  }\n});\n\nconst DialogTitle = withStyles(styles)(props => {\n  const { children, classes, onClose, ...other } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    padding: theme.spacing(2),\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing(1),\n  },\n}))(MuiDialogActions);\n\nconst InfoModal = () => {\n\n  const [open, setOpen] = React.useState(false);\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n  const handleClose = () => {\n    setOpen(false);\n  };\n  \n\n  return (\n    <div>\n      <InfoIcon style={styles.icon} onClick={handleClickOpen} />\n      <Dialog onClose={handleClose} aria-labelledby=\"customized-dialog-title\" open={open}>\n        <DialogTitle id=\"customized-dialog-title\" onClose={handleClose}>\n            Development technologies\n        </DialogTitle>\n        <DialogContent dividers>\n          <Typography gutterBottom>\n          This is a task ticket management tool developed to support the management of a project using agile methodologies such as Scrum.\n          </Typography>\n            <SimpleList />\n          <Typography gutterBottom>\n            You can also view other projects like this in my GitHub repository or you can see my linkedin profile for more information.\n          </Typography>\n          <DialogActions style={{marginRight: \"40%\"}}>\n            <IconButton edge=\"start\" href=\"https://github.com/gmujica/proyect-ticket-manager\" target=\"_blank\"  color=\"inherit\" aria-label=\"menu\">\n              <GitHubIcon />\n            </IconButton>\n            <IconButton edge=\"start\" href=\"https://www.linkedin.com/in/gregory-mujica-2a0400b6/\" target=\"_blank\" color=\"inherit\" aria-label=\"menu\">\n              <LinkedInIcon />\n            </IconButton>\n          </DialogActions>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={handleClose} color=\"primary\">\n            Agree\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n\nexport default InfoModal;","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\nimport InfoModal from '../InfoModal';\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n  },\n}));\n\nconst Header = (props) => {\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <MenuIcon />\n          </IconButton>\n          <Typography variant=\"h6\" className={classes.title}>\n            Chat App\n          </Typography>\n          {props.children}\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <InfoModal />\n          </IconButton>\n          <IconButton edge=\"start\" href=\"https://github.com/gmujica/proyect-ticket-manager\" target=\"_blank\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <GitHubIcon />\n          </IconButton>\n          <IconButton edge=\"start\" href=\"https://www.linkedin.com/in/gregory-mujica-2a0400b6/\" target=\"_blank\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\n            <LinkedInIcon />\n          </IconButton>\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport IconButton from '@material-ui/core/IconButton';\nimport Icon from '@material-ui/core/Icon';\n//import AccountCircle from '@material-ui/icons/AccountCircle';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Menu from '@material-ui/core/Menu';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\n\nconst User = ({ history, user, onLogout }) => {\n    //const [auth, setAuth] = React.useState(true);\n    const [anchorEl, setAnchorEl] = React.useState(null);\n    const open = Boolean(anchorEl);\n\n    const handleMenu = event => {\n        setAnchorEl(event.currentTarget);\n    };\n\n    const handleClose = () => {\n        setAnchorEl(null);\n    };\n\n    const handleLogout = () => {\n        setAnchorEl(null);\n\n        firebase.auth().signOut().then(() => {\n            if (onLogout) onLogout();\n            history.push('/login');\n        });\n    };\n\n    return (\n        <div>\n            <IconButton\n                aria-label=\"account of current user\"\n                aria-controls=\"menu-appbar\"\n                aria-haspopup=\"true\"\n                onClick={handleMenu}\n                color=\"inherit\"\n            >\n            <Icon>account_circle</Icon>\n            </IconButton>\n            <Menu\n                id=\"menu-appbar\"\n                anchorEl={anchorEl}\n                anchorOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                keepMounted\n                transformOrigin={{\n                  vertical: 'top',\n                  horizontal: 'right',\n                }}\n                open={open}\n                onClose={handleClose}\n            >\n                <MenuItem disabled>{user.name}</MenuItem>\n                <MenuItem onClick={handleLogout}>Salir</MenuItem>\n            </Menu>\n        </div>\n    )\n};\n\nexport default withRouter(User);","import React  from 'react';\nimport clsx from 'clsx';\nimport { amber, green } from '@material-ui/core/colors';\nimport Icon from  '@material-ui/core/Icon';\nimport IconButton from '@material-ui/core/IconButton';\nimport Snackbar from '@material-ui/core/Snackbar';\nimport SnackbarContent from '@material-ui/core/SnackbarContent';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles(theme => ({\n    success: {\n      backgroundColor: green[600],\n    },\n    error: {\n      backgroundColor: theme.palette.error.dark,\n    },\n    info: {\n      backgroundColor: theme.palette.primary.main,\n    },\n    warning: {\n      backgroundColor: amber[700],\n    },\n    icon: {\n      fontSize: 20,\n    },\n    iconVariant: {\n      opacity: 0.9,\n      marginRight: theme.spacing(1),\n    },\n    message: {\n      display: 'flex',\n      alignItems: 'center',\n    },\n  }));\n  \n\nconst  Alert  =  ({ type,  message, autoclose })  => {\n    const classes = useStyles();\n    const [open, setOpen] = React.useState(true);\n\n    const handleClose = (event, reason) => {\n        if (reason === 'clickaway') {\n        return;\n    }\n    setOpen(false);\n    };\n    return  (\n        <Snackbar\n            anchorOrigin={{\n                vertical: 'bottom',\n                horizontal: 'center',\n            }}\n            open={open}\n            autoHideDuration={autoclose}\n            onClose={handleClose}\n        >\n            <SnackbarContent\n                className={clsx(classes[type])}\n                aria-describedby=\"client-snackbar\"\n                message={\n                    <span id=\"client-snackbar\" className={classes.message}>\n                    <Icon className={clsx(classes.icon, classes.iconVariant)}>\n                        {type  === 'success' ? 'check_circle' : type}\n                    </Icon>\n                    {message}\n                    </span>\n                }\n                action={[\n                    <IconButton key=\"close\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\n                    <Icon className={classes.icon}>\n                        close\n                    </Icon>\n                    </IconButton>,\n                ]}\n        />\n        </Snackbar>\n    );\n};\n\nexport default Alert;","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\nimport Paper from '@material-ui/core/Paper'\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\nimport Alert from  './Alert';\n\nconst MyLink = React.forwardRef((props, ref) => <RouterLink innerRef={ref} {...props} />);\n\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.white,\n    },\n  },\n  root: {\n    padding: theme.spacing(3, 2),\n    \n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  paperUser: {\n    marginTop: theme.spacing(15),\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst Login = (props) => {\n  const classes = useStyles();\n  const [user, setUser] = useState({\n      email: '',\n      password: '' \n  });\n\n  const [errorMessage, setErrorMessage] = useState('');\n\n    const handleChange = (e) => {\n        setUser({\n            ...user,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    const handleLogin = (e) => {\n        e.preventDefault();\n        setErrorMessage('');\n\n        firebase.auth().signInWithEmailAndPassword(user.email, user.password)\n        .then(response => {\n            props.history.push('/');\n        })\n        .catch(error => {\n            console.log(error);\n            //alert(error.message);\n            setErrorMessage(error.message);\n        });\n    };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h5\">\n          Ingresar a Chat App\n        </Typography>\n        <form className={classes.form} onSubmit={handleLogin}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Email Address\"\n            name=\"email\"\n            autoComplete=\"email\"\n            autoFocus\n            defaultValue={user.email}\n            onChange={handleChange}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            defaultValue={user.password}\n            onChange={handleChange}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Ingresar\n          </Button>\n          <Grid container>\n            <Grid item>\n              <Link to=\"/signup\" component={MyLink} variant=\"body2\">\n                {\"No tengo una cuenta\"}\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      <Grid container>\n        <div className={classes.paperUser}>\n          <Paper className={classes.root}>\n            <Typography variant=\"h5\" component=\"h3\">\n              Usuarios de Prueba:\n            </Typography>\n            <Typography component=\"p\">\n             Email-1: user@user.com - Password: 123456\n             Email-2: user2@user.com - Password: 123456\n            </Typography>\n          </Paper>\n        </div>\n      </Grid>\n      {errorMessage  &&\n        <Alert  type='error' message={errorMessage}  autoclose={5000} />\n      }\n    </Container>\n  );\n};\n\nexport default withRouter(Login);","import React, { useState } from 'react';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport { Link as RouterLink, withRouter } from 'react-router-dom';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\nimport Alert from  './Alert';\n\n\nconst MyLink = React.forwardRef((props, ref) => <RouterLink innerRef={ref} {...props} />);\n\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.white,\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nconst SignUp = (props) => {\n  const classes = useStyles();\n    const [user, setUser] = useState({\n        name: '',\n        email: '',\n        password: '',\n        avatar: ''\n    });\n\n    const [alertMessage, setAlertMessage] = useState(null);\n\n    const handleChange = (e) => {\n        setUser({\n            ...user,\n            [e.target.name]: e.target.value\n        });\n    };\n\n    // Registro en Firebase\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        setAlertMessage(null);\n\n        firebase.auth().createUserWithEmailAndPassword(user.email, user.password)\n        .then(response => {\n            // guardar los datos del usuario\n            delete user.password;\n            firebase.database().ref(`/users/${response.user.uid}`).set(user);\n            //alert('Bienvenido a Chat App');\n            setAlertMessage({\n              type: 'success',\n              message: 'Bienvenido a Chat App'\n            });\n            props.history.push('/');\n        })\n        .catch(error => {\n            console.log(error);\n            //alert(error.message);\n            setAlertMessage({\n              type: 'error',\n              message: error.message\n            });\n        });\n    };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Typography component=\"h1\" variant=\"h5\">\n          Registrarme en Chat App\n        </Typography>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                autoComplete=\"fname\"\n                name=\"name\"\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"name\"\n                label=\"Nombre\"\n                autoFocus\n                value={user.name}\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"avatar\"\n                label=\"URL avatar\"\n                name=\"avatar\"\n                value={user.avatar}\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                id=\"email\"\n                label=\"Email Address\"\n                name=\"email\"\n                autoComplete=\"email\"\n                value={user.email}\n                onChange={handleChange}\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                variant=\"outlined\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                value={user.password}\n                onChange={handleChange}\n              />\n            </Grid>\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Registrarme\n          </Button>\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Link to=\"/login\" component={MyLink} variant=\"body2\">\n                Ya tienes una cuenta? Ingresa aqui\n              </Link>\n            </Grid>\n          </Grid>\n        </form>\n      </div>\n      {alertMessage &&  \n        <Alert \n          type={alertMessage.type}   \n          message={alertMessage.message} \n          autoclose={5000} \n        />\n      }    \n    </Container>\n  );\n};\n\nexport default withRouter(SignUp);","import React, { useState } from 'react';\nimport Paper from '@material-ui/core/Paper';\nimport Icon from '@material-ui/core/Icon';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport TextField from '@material-ui/core/TextField';\nimport { makeStyles }  from  '@material-ui/core/styles';\nimport { Button } from '@material-ui/core';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        flexGrow: 1\n    },\n    paper: {\n        paddingTop: 15,\n      paddingBottom: 20\n    },\n    message: {\n        border: '1px solid #ccc',\n        borderRadius: 8,\n        padding: '0 20px'\n    },\n    box: {\n        height: '100%',\n        paddingLeft: 20,\n    }\n}));\n\nconst NewMessage = () => {\n    const classes = useStyles(); \n    const  [message, setMessage] = useState('');\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        const { currentUser } = firebase.auth();\n        if (!currentUser) return;\n\n        const NewMessage = {\n            user: currentUser.uid,\n            message,\n            date: firebase.database.ServerValue.TIMESTAMP\n        };\n        firebase.database().ref('/chat').push(NewMessage)\n        .then(res => {\n            setMessage('');\n        })\n        .catch(error => {\n            console.log(error);\n            alert(error.message);\n            \n        })\n    };\n\n    return (\n        <Paper square className={classes.paper}>\n            <form onSubmit={handleSubmit}>\n                <Grid container spacing={0} direction='row' className={classes.message}>\n                    <Grid item xs={10}>\n                        <TextField\n                            margin=\"normal\"\n                            name=\"message\"\n                            required\n                            fullWidth\n                            id=\"message\"\n                            label=\"Mensaje\"\n                            autoFocus\n                            value={message}\n                            onChange={e => setMessage(e.target.value)}\n                        />\n                    </Grid>\n                    <Grid item xs={2}>\n                        <Box display=\"flex\" alignItems=\"center\" className={classes.box}>\n                            <Button\n                                variant='contained'\n                                color='primary'\n                                endIcon={<Icon>send</Icon>}\n                                fullWidth\n                                disabled={!message.length}  \n                            >\n                                Enviar\n                            </Button>\n                        </Box>\n                    </Grid>\n                </Grid>\n            </form>\n        </Paper>\n    );\n\n};\n\nexport default NewMessage;","import React, { useState, useEffect, useRef } from 'react';\nimport { withRouter } from 'react-router-dom'; \nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport Paper from '@material-ui/core/Paper';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport ListItemText from '@material-ui/core/ListItemText';   \nimport Avatar from '@material-ui/core/Avatar';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\nimport NewMessaje from './NewMessage';\n\nconst useStyles = makeStyles(theme => ({\n    text: {\n      padding: theme.spacing(2, 2, 0),\n    },\n    paper: {\n      paddingBottom: 50,\n      height: '70vh'\n    },\n    list: {\n      marginBottom: theme.spacing(3),\n      maxHeight: '100%',\n      overflow: 'auto'\n    }\n}));\n\nconst Chat = ({ history }) => {\n    const classes = useStyles();\n    const [messages, setMessages] = useState([]);\n\n    const chatDomRef = useRef();\n\n    const addMessage = (message) => {\n        messages.push(message);\n\n        setMessages([...messages.sort((a, b) => a.date - b.date)]);\n\n        if(chatDomRef.current) {\n            chatDomRef.current.scrollTop = chatDomRef.current.scrollHeight;\n        }\n    };\n\n    useEffect(() => {\n        const chatRef = firebase.database().ref('/chat');\n\n        chatRef.on(\n            'child_added',\n            snapshot => {\n                // nuevo mensaje\n                const messageItem  = snapshot.val();\n                // leer los datos  del usuario\n                firebase.database().ref(`/users/${messageItem.user}`)\n                .once('value')\n                .then(userResp  => {\n                    messageItem.user = userResp.val();\n                    addMessage(messageItem);\n                })\n            },\n            error => {\n                //console.log(error);\n                if(error.message.includes('permission_denied')){\n                    history.push('/login');\n                }\n            }\n        )\n    }, []);\n\n    return (\n        <Container>\n            <Paper square className={classes.paper}>\n                <Typography className={classes.text} variant=\"h5\" gutterBottom>\n                Chat\n                </Typography>\n                <List className={classes.list} ref={chatDomRef}>\n                    {messages.map(({ date, user, message }) => (\n                        <ListItem button key={date}>\n                            <ListItemAvatar>\n                                <Avatar alt={user.name} src={user.avatar} />\n                            </ListItemAvatar>\n                            <ListItemText primary={user ? user.name : 'anonymous'} secondary={message} />\n                        </ListItem>\n                    ))}\n                </List>\n            </Paper>\n                <NewMessaje />\n        </Container>    \n    );\n};\n\nexport default withRouter(Chat);","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\n// COMPONENTS\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport Chat from './components/chat';\n\nconst Routes = () => (\n    <Switch>\n        <Route exact path='/' component={Chat} />\n        <Route exact path='/login' component={Login} />\n        <Route exact path='/signup' component={Signup} />\n    </Switch>\n);\n\nexport default Routes;\n\n","import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Header from './components/layout/Header';\nimport User from './components/User';\nimport Routes from './Routes';\nimport firebase from 'firebase/app';\nimport 'firebase/database';\nimport 'firebase/auth';\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCAWmzjZ530vF3KzanUq00anxRH1FZ4pSc\",\n  authDomain: \"chat-app-1bb7c.firebaseapp.com\",\n  databaseURL: \"https://chat-app-1bb7c.firebaseio.com\",\n  projectId: \"chat-app-1bb7c\",\n  storageBucket: \"chat-app-1bb7c.appspot.com\",\n  messagingSenderId: \"486931212123\",\n  appId: \"1:486931212123:web:eb796556091c91a1495c7e\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nfunction App() {\n  const [user, setUser] = useState(null);\n\n  const onLogout = () => {\n    setUser(null);\n  };\n\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(response => {\n      if(response) {\n\n        // leer los datos del usuario\n        firebase.database().ref(`/users/${response.uid}`)\n        .once('value')\n        .then(snapshot => {\n          setUser(snapshot.val());\n        });\n      }\n    });\n  }, []);\n\n  return (\n    <Router>\n      <CssBaseline />\n      <Header>\n        {user && <User user={user} onLogout={onLogout} />}\n      </Header>\n      <Routes  />\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}